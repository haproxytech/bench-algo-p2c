# The sidecar accepts incoming connections on any address, port 2xxx.
# It forwards them to the local service, port 12xxx. The service then
# uses the local port 22xxx for outgoing connections. Statistics are
# available on port 32xxx.

global
	presetenv PORT "PORT variable must be set"
	log /dev/log local0
	# log 127.0.0.1:5514 local0
	# log stdout format raw daemon
	profiling.tasks on
	stats socket "/tmp/sock-$PORT" mode 666 level admin
	stats timeout 1h
	tune.ssl.default-dh-param 1024
	ssl-server-verify none

defaults
	mode http
	timeout connect 4s
	timeout queue  10s
	timeout client 2s
	timeout server 2s
	monitor-uri /health
	option httpchk /health
	default-server check inter 1s
	balance leastconn
	#balance roundrobin
	#option prefer-last-server
	http-reuse always
	option dontlog-normal

listen inbound
	log global
	# option httplog
	log-format "%ci:%cp [%tr] %ft %b/%s %Th+%Ti+%TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r cnt=%rt cpu_calls=%[cpu_calls] cpu_ns_tot=%[cpu_ns_tot] cpu_ns_avg=%[cpu_ns_avg] lat_ns_tot=%[lat_ns_tot] lat_ns_avg=%[lat_ns_avg]"

	bind ":$PORT"
	#bind ":$PORT" ssl crt rsa+dh2048.pem npn h2,http/1.1 alpn h2,http/1.1

	# reject requests coming without the API key or with a bad one
	# http-request deny if ! { req.hdr(x-api-key) -m found }
	# http-request deny if ! { req.hdr(x-api-key) -m str foobar }

	option http-buffer-request
	server srv "127.0.0.2:1$PORT" no-check #maxconn 1

frontend outbound
	log global
	# option httplog
	log-format "%ci:%cp [%tr] %ft %b/%s %Th+%Ti+%TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r cnt=%rt cpu_calls=%[cpu_calls] cpu_ns_tot=%[cpu_ns_tot] cpu_ns_avg=%[cpu_ns_avg] lat_ns_tot=%[lat_ns_tot] lat_ns_avg=%[lat_ns_avg]"

	bind "127.0.0.3:2$PORT"
	# option http-buffer-request
        # http-request cache-use cache
        # http-response cache-store cache

	# route requests to the different services
	use_backend mytime  if { path_beg /MyTime   }
	use_backend log     if { path_beg /Log      }
	use_backend user    if { path_beg /UserAttr }
	use_backend time    if { path_beg /GetTime  }

backend mytime
	server srv1 "198.18.0.1:2004"
	server srv2 "198.18.0.2:2004"
	server srv3 "198.18.0.3:2004"
	server srv4 "198.18.0.4:2004"
	server srv5 "198.18.0.5:2004"
	server srv6 "198.18.0.6:2004"

backend log
	server srv1 "198.18.0.1:2003"
	server srv2 "198.18.0.2:2003"
	server srv3 "198.18.0.3:2003"
	server srv4 "198.18.0.4:2003"
	server srv5 "198.18.0.5:2003"
	server srv6 "198.18.0.6:2003"

backend user
	server srv1 "198.18.0.1:2002"
	server srv2 "198.18.0.2:2002"
	server srv3 "198.18.0.3:2002"
	server srv4 "198.18.0.4:2002"
	server srv5 "198.18.0.5:2002"
	server srv6 "198.18.0.6:2002"

backend time
	server srv1 "198.18.0.1:2001"
	server srv2 "198.18.0.2:2001"
	server srv3 "198.18.0.3:2001"
	server srv4 "198.18.0.4:2001"
	server srv5 "198.18.0.5:2001"
	server srv6 "198.18.0.6:2001"

frontend stats
	bind ":3$PORT"
	stats uri /
